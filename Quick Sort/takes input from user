import java.util.Random;
import java.util.Scanner;

public class QuickSortExact {

    // Quick Sort Function
    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int p = partition(arr, low, high);
            quickSort(arr, low, p - 1);
            quickSort(arr, p + 1, high);
        }
    }

    // Partition Function (Last Element as Pivot)
    private static int partition(int[] arr, int low, int high) {
        int pivot = arr[high], i = low - 1;
        for (int j = low; j < high; j++) {
            if (arr[j] < pivot) swap(arr, ++i, j);
        }
        swap(arr, i + 1, high);
        return i + 1;
    }

    // Swap Function
    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    // Generate Array for Best, Average, Worst Case
    private static int[] generateArray(int size, String type) {
        int[] arr = new int[size];
        Random rand = new Random();
        for (int i = 0; i < size; i++) {
            arr[i] = (type.equals("Worst")) ? size - i : (type.equals("Best") ? i : rand.nextInt(size));
        }
        return arr;
    }

    // Measure Exact Time (in ms)
    private static long measureTime(int[] arr) {
        long start = System.nanoTime();
        quickSort(arr, 0, arr.length - 1);
        return (System.nanoTime() - start) / 1000000; // ms
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Taking user input for array size and test type
        System.out.print("Enter array size: ");
        int size = sc.nextInt();
        System.out.print("Enter test type (Best, Average, Worst): ");
        String type = sc.next();

        // Validating the input type
        while (!(type.equals("Best") || type.equals("Average") || type.equals("Worst"))) {
            System.out.print("Invalid input! Enter 'Best', 'Average', or 'Worst': ");
            type = sc.next();
        }

        // Generate the array based on user input
        int[] arr = generateArray(size, type);

        // Measure and print the time taken for sorting
        System.out.println("Time taken: " + measureTime(arr) + " ms");

        sc.close();
    }
}

sample input:
Enter array size: 5000
Enter test type (Best, Average, Worst): Average

sample output:
Time taken: 1 ms
