import java.util.Random;
import java.util.Scanner;

public class MergeSortExact {

    public static void mergeSort(int[] arr, int low, int high) {
        if (low < high) {
            int mid = low + (high - low) / 2;
            mergeSort(arr, low, mid);
            mergeSort(arr, mid + 1, high);
            merge(arr, low, mid, high);
        }
    }

    private static void merge(int[] arr, int low, int mid, int high) {
        int[] left = new int[mid - low + 1], right = new int[high - mid];
        for (int i = 0; i < left.length; i++) left[i] = arr[low + i];
        for (int i = 0; i < right.length; i++) right[i] = arr[mid + 1 + i];

        int i = 0, j = 0, k = low;
        while (i < left.length && j < right.length) arr[k++] = (left[i] <= right[j]) ? left[i++] : right[j++];
        while (i < left.length) arr[k++] = left[i++];
        while (j < right.length) arr[k++] = right[j++];
    }

    private static int[] generateArray(int size, String type) {
        int[] arr = new int[size];
        Random rand = new Random();
        for (int i = 0; i < size; i++) arr[i] = (type.equals("Worst")) ? size - i : (type.equals("Best") ? i : rand.nextInt(size));
        return arr;
    }

    private static long measureTime(int[] arr) {
        long start = System.nanoTime();
        mergeSort(arr, 0, arr.length - 1);
        return (System.nanoTime() - start) / 1000000;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter array size: ");
        int size = sc.nextInt();
        System.out.print("Enter test type (Best, Average, Worst): ");
        String type = sc.next();

        while (!(type.equals("Best") || type.equals("Average") || type.equals("Worst"))) {
            System.out.print("Invalid input! Enter 'Best', 'Average', or 'Worst': ");
            type = sc.next();
        }

        int[] arr = generateArray(size, type);
        System.out.println("Time taken: " + measureTime(arr) + " ms");
        sc.close();
    }
}
sample input:
Time taken: 8 ms

sample output:
Enter array size: 5000
Enter test type (Best, Average, Worst): Average

